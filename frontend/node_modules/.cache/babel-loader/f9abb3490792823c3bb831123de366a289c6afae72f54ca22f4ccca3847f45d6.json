{"ast":null,"code":"\"use strict\";\n\n/**\n * Model data for Project 4 - the photo sharing site.\n * This module returns an object called models with the following\n * functions:\n *\n * models.userListModel() - A function that returns the list of users on\n * the system. The list is returned as an array of objects containing:\n *   _id (string)         - The ID of the user.\n *   first_name (string)  - The first name of the user.\n *   last_name (string)   - The last name of the user.\n *   location (string)    - The location of the user.\n *   description (string) - A brief user description.\n *   occupation (string)  - The occupation of the user.\n *\n * models.userModel() - A function that returns the info of the specified\n * user. Called with an user ID (id), the function returns n object containing:\n *   _id (string)         - The ID of the user.\n *   first_name (string)  - The first name of the user.\n *   last_name (string)   - The last name of the user.\n *   location (string)    - The location of the user.\n *   description (string) - A brief user description.\n *   occupation (string)  - The occupation of the user.\n *\n * models.photoOfUserModel() - A function that returns the photos belong to\n * the specified user. Called with an user ID (id), the function returns an\n * object containing:\n *   _id (string)         - The ID of the photo\n *   date_time (date)     - The date and time the picture was taken in ISO\n *                          format.\n *   file_name (string)   - The file name in the image directory of the picture.\n *   user_id (string)     - The user id of the picture's owner.\n *   comments ([objects]) - An array of Comments with the properties:\n *       _id (string)       - The ID of the comment.\n *       date_time (date)   - The date the comment was made in ISO format.\n *       comment (string)   - The text of the comment.\n *       user: (object)     - The user who made the comment.\n *       photo_id: (string) - The ID of the photo the comment belongs to.\n *\n * models.schemaModel() - A function that returns the test info from the\n * fake schema. The function returns an object containing:\n *   _id (string)           - The ID of the schema.\n *   __v (number)           - The version number.\n *   load_date_time (date)  - The date the schema was made in ISO format.\n */\nconst schemaInfo = {\n  load_date_time: \"Fri Apr 29 2016 01:45:15 GMT-0700 (PDT)\",\n  __v: 0,\n  _id: \"57231f1b30e4351f4e9f4bf6\"\n};\n\n// Create init users.\n\nconst im = {\n  _id: \"57231f1a30e4351f4e9f4bd7\",\n  first_name: \"Ian\",\n  last_name: \"Malcolm\",\n  location: \"Austin, TX\",\n  description: \"Should've stayed in the car.\",\n  occupation: \"Mathematician\"\n};\nconst er = {\n  _id: \"57231f1a30e4351f4e9f4bd8\",\n  first_name: \"Ellen\",\n  last_name: \"Ripley\",\n  location: \"Nostromo\",\n  description: \"Lvl 6 rating. Pilot.\",\n  occupation: \"Warrant Officer\"\n};\nconst pt = {\n  _id: \"57231f1a30e4351f4e9f4bd9\",\n  first_name: \"Peregrin\",\n  last_name: \"Took\",\n  location: \"Gondor\",\n  description: \"Home is behind, the world ahead... \" + \"And there are many paths to tread. Through shadow, to the edge of night, \" + \"until the stars are all alight... Mist and shadow, cloud and shade, \" + \"all shall fade... all... shall... fade... \",\n  occupation: \"Thain\"\n};\nconst rk = {\n  _id: \"57231f1a30e4351f4e9f4bda\",\n  first_name: \"Rey\",\n  last_name: \"Kenobi\",\n  location: \"D'Qar\",\n  description: \"Excited to be here!\",\n  occupation: \"Rebel\"\n};\nconst al = {\n  _id: \"57231f1a30e4351f4e9f4bdb\",\n  first_name: \"April\",\n  last_name: \"Ludgate\",\n  location: \"Pawnee, IN\",\n  description: \"Witch\",\n  occupation: \"Animal Control\"\n};\nconst jo = {\n  _id: \"57231f1a30e4351f4e9f4bdc\",\n  first_name: \"John\",\n  last_name: \"Ousterhout\",\n  location: \"Stanford, CA\",\n  description: \"<i>CS142!</i>\",\n  occupation: \"Professor\"\n};\nconst users = [im, er, pt, rk, al, jo];\n\n// Create initial photos.\nconst photo1 = {\n  _id: \"57231f1a30e4351f4e9f4bdd\",\n  date_time: \"2012-08-30 10:44:23\",\n  file_name: \"ouster.jpg\",\n  user_id: jo._id\n};\nconst photo2 = {\n  _id: \"57231f1a30e4351f4e9f4bde\",\n  date_time: \"2009-09-13 20:00:00\",\n  file_name: \"malcolm2.jpg\",\n  user_id: im._id\n};\nconst photo3 = {\n  _id: \"57231f1a30e4351f4e9f4bdf\",\n  date_time: \"2009-09-13 20:05:03\",\n  file_name: \"malcolm1.jpg\",\n  user_id: im._id\n};\nconst photo4 = {\n  _id: \"57231f1a30e4351f4e9f4be0\",\n  date_time: \"2013-11-18 18:02:00\",\n  file_name: \"ripley1.jpg\",\n  user_id: er._id\n};\nconst photo5 = {\n  _id: \"57231f1a30e4351f4e9f4be1\",\n  date_time: \"2013-09-20 17:30:00\",\n  file_name: \"ripley2.jpg\",\n  user_id: er._id\n};\nconst photo6 = {\n  _id: \"57231f1a30e4351f4e9f4be2\",\n  date_time: \"2009-07-10 16:02:49\",\n  file_name: \"kenobi1.jpg\",\n  user_id: rk._id\n};\nconst photo7 = {\n  _id: \"57231f1a30e4351f4e9f4be3\",\n  date_time: \"2010-03-18 23:48:00\",\n  file_name: \"kenobi2.jpg\",\n  user_id: rk._id\n};\nconst photo8 = {\n  _id: \"57231f1a30e4351f4e9f4be4\",\n  date_time: \"2010-08-30 14:26:00\",\n  file_name: \"kenobi3.jpg\",\n  user_id: rk._id\n};\nconst photo9 = {\n  _id: \"57231f1a30e4351f4e9f4be5\",\n  date_time: \"2013-12-03 09:02:00\",\n  file_name: \"took1.jpg\",\n  user_id: pt._id\n};\nconst photo10 = {\n  _id: \"57231f1a30e4351f4e9f4be6\",\n  date_time: \"2013-12-03 09:03:00\",\n  file_name: \"took2.jpg\",\n  user_id: pt._id\n};\nconst photo11 = {\n  _id: \"57231f1a30e4351f4e9f4be7\",\n  date_time: \"2013-09-04 09:16:32\",\n  file_name: \"ludgate1.jpg\",\n  user_id: al._id\n};\nconst photo12 = {\n  _id: \"57231f1a30e4351f4e9f4be8\",\n  date_time: \"2008-10-16 17:12:28\",\n  file_name: \"kenobi4.jpg\",\n  user_id: rk._id\n};\nconst photos = [photo1, photo2, photo3, photo4, photo5, photo6, photo7, photo8, photo9, photo10, photo11, photo12];\n\n// Create initial comments.\nconst comment1 = {\n  _id: \"57231f1a30e4351f4e9f4be9\",\n  date_time: \"2012-09-02 14:01:00\",\n  comment: \"Learning new programming languages is hard... \" + \"it's so easy to forget a </div>!\",\n  user: jo,\n  photo_id: photo1._id\n};\nconst comment2 = {\n  _id: \"57231f1a30e4351f4e9f4bea\",\n  date_time: \"2013-09-06 14:02:00\",\n  comment: \"This is another comment, with a bit more text; \" + \"if the text gets long enough, does it wrap properly \" + \"from line to line?\",\n  user: jo,\n  photo_id: photo1._id\n};\nconst comment3 = {\n  _id: \"57231f1a30e4351f4e9f4beb\",\n  date_time: \"2013-09-08 14:06:00\",\n  comment: \"If you see this text in <b>boldface</b> \" + \"then HTML escaping isn't working properly.\",\n  user: jo,\n  photo_id: photo1._id\n};\nconst comment4 = {\n  _id: \"57231f1a30e4351f4e9f4bec\",\n  date_time: \"2009-09-14 18:07:00\",\n  comment: \"If there is one thing the history of evolution has\" + \" taught us it's that life will not be contained. Life breaks \" + \"free, it expands to new territories and crashes through \" + \"barriers, painfully, maybe even dangerously, but, uh... well, \" + \"there it is. Life finds a way.\",\n  user: im,\n  photo_id: photo2._id\n};\nconst comment5 = {\n  _id: \"57231f1a30e4351f4e9f4bed\",\n  date_time: \"2013-11-28 17:45:13\",\n  comment: \"Back from my trip. Did IQs just... drop sharply while I was \" + \"away?\",\n  user: er,\n  photo_id: photo5._id\n};\nconst comment6 = {\n  _id: \"57231f1a30e4351f4e9f4bee\",\n  date_time: \"2013-11-02 14:07:00\",\n  comment: \"Hey Rey, great form. Love what \" + \"you do with the scavenged tech, got any tips?\",\n  user: er,\n  photo_id: photo7._id\n};\nconst comment7 = {\n  _id: \"57231f1a30e4351f4e9f4bef\",\n  date_time: \"2013-11-02 14:09:15\",\n  comment: \"Definitely! I love your work! I'm away on a trip at \" + \"the moment, but let's meet up when I get back! :)\",\n  user: rk,\n  photo_id: photo7._id\n};\nconst comment8 = {\n  _id: \"57231f1a30e4351f4e9f4bf0\",\n  date_time: \"2010-09-06 13:59:33\",\n  comment: \"Made a new friend today! Well, they followed me \" + \"home, anyway.\",\n  user: rk,\n  photo_id: photo8._id\n};\nconst comment9 = {\n  _id: \"57231f1a30e4351f4e9f4bf1\",\n  date_time: \"2008-10-16 18:04:55\",\n  comment: \"Wouldn't get anywhere without this beauty! \" + \"Completely built from scraps by hand, but she goes at top \" + \"speeds that'll rival any First Order piece of junk.\",\n  user: rk,\n  photo_id: photo12._id\n};\nconst comment10 = {\n  _id: \"57231f1a30e4351f4e9f4bf2\",\n  date_time: \"2013-12-04 13:12:00\",\n  comment: \"What do you mean you haven't heard of second \" + \"breakfast?\",\n  user: pt,\n  photo_id: photo10._id\n};\nconst comment11 = {\n  _id: \"57231f1a30e4351f4e9f4bf3\",\n  date_time: \"2013-09-04 10:14:32\",\n  comment: \"Beautiful yet cold and aloof. Loner. Does not obey, \" + \"occasionally chooses to cooperate. \",\n  user: al,\n  photo_id: photo11._id\n};\nconst comment12 = {\n  _id: \"57231f1a30e4351f4e9f4bf4\",\n  date_time: \"2016-01-04 2:00:01\",\n  comment: \"Which one are you?\",\n  user: al,\n  photo_id: photo9._id\n};\nconst comment13 = {\n  _id: \"57231f1a30e4351f4e9f4bf5\",\n  date_time: \"2016-01-04 2:04:01\",\n  comment: \"The tall one.\",\n  user: pt,\n  photo_id: photo9._id\n};\nconst comments = [comment1, comment2, comment3, comment4, comment5, comment6, comment7, comment8, comment9, comment10, comment11, comment12, comment13];\ncomments.forEach(function (comment) {\n  const photo = photos.filter(function (photo) {\n    return photo._id === comment.photo_id;\n  })[0]; // Only one match. Return the content of the match inside the array\n\n  if (!photo.comments) {\n    photo.comments = [];\n  }\n  photo.comments.push(comment);\n});\nconst userListModel = function () {\n  return users;\n};\nconst userModel = function (userId) {\n  for (let i = 0; i < users.length; i++) {\n    if (users[i]._id === userId) {\n      return users[i];\n    }\n  }\n  return null;\n};\nconst photoOfUserModel = function (userId) {\n  return photos.filter(function (photo) {\n    return photo.user_id === userId;\n  });\n};\nconst schemaModel = function () {\n  return schemaInfo;\n};\nconst models = {\n  userListModel: userListModel,\n  userModel: userModel,\n  photoOfUserModel: photoOfUserModel,\n  schemaInfo: schemaModel\n};\nexport default models;","map":{"version":3,"names":["schemaInfo","load_date_time","__v","_id","im","first_name","last_name","location","description","occupation","er","pt","rk","al","jo","users","photo1","date_time","file_name","user_id","photo2","photo3","photo4","photo5","photo6","photo7","photo8","photo9","photo10","photo11","photo12","photos","comment1","comment","user","photo_id","comment2","comment3","comment4","comment5","comment6","comment7","comment8","comment9","comment10","comment11","comment12","comment13","comments","forEach","photo","filter","push","userListModel","userModel","userId","i","length","photoOfUserModel","schemaModel","models"],"sources":["/home/quan/photo_sharing_mongoDB/frontend/src/modelData/models.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Model data for Project 4 - the photo sharing site.\n * This module returns an object called models with the following\n * functions:\n *\n * models.userListModel() - A function that returns the list of users on\n * the system. The list is returned as an array of objects containing:\n *   _id (string)         - The ID of the user.\n *   first_name (string)  - The first name of the user.\n *   last_name (string)   - The last name of the user.\n *   location (string)    - The location of the user.\n *   description (string) - A brief user description.\n *   occupation (string)  - The occupation of the user.\n *\n * models.userModel() - A function that returns the info of the specified\n * user. Called with an user ID (id), the function returns n object containing:\n *   _id (string)         - The ID of the user.\n *   first_name (string)  - The first name of the user.\n *   last_name (string)   - The last name of the user.\n *   location (string)    - The location of the user.\n *   description (string) - A brief user description.\n *   occupation (string)  - The occupation of the user.\n *\n * models.photoOfUserModel() - A function that returns the photos belong to\n * the specified user. Called with an user ID (id), the function returns an\n * object containing:\n *   _id (string)         - The ID of the photo\n *   date_time (date)     - The date and time the picture was taken in ISO\n *                          format.\n *   file_name (string)   - The file name in the image directory of the picture.\n *   user_id (string)     - The user id of the picture's owner.\n *   comments ([objects]) - An array of Comments with the properties:\n *       _id (string)       - The ID of the comment.\n *       date_time (date)   - The date the comment was made in ISO format.\n *       comment (string)   - The text of the comment.\n *       user: (object)     - The user who made the comment.\n *       photo_id: (string) - The ID of the photo the comment belongs to.\n *\n * models.schemaModel() - A function that returns the test info from the\n * fake schema. The function returns an object containing:\n *   _id (string)           - The ID of the schema.\n *   __v (number)           - The version number.\n *   load_date_time (date)  - The date the schema was made in ISO format.\n */\n\nconst schemaInfo = {\n  load_date_time: \"Fri Apr 29 2016 01:45:15 GMT-0700 (PDT)\",\n  __v: 0,\n  _id: \"57231f1b30e4351f4e9f4bf6\",\n};\n\n// Create init users.\n\nconst im = {\n  _id: \"57231f1a30e4351f4e9f4bd7\",\n  first_name: \"Ian\",\n  last_name: \"Malcolm\",\n  location: \"Austin, TX\",\n  description: \"Should've stayed in the car.\",\n  occupation: \"Mathematician\",\n};\nconst er = {\n  _id: \"57231f1a30e4351f4e9f4bd8\",\n  first_name: \"Ellen\",\n  last_name: \"Ripley\",\n  location: \"Nostromo\",\n  description: \"Lvl 6 rating. Pilot.\",\n  occupation: \"Warrant Officer\",\n};\nconst pt = {\n  _id: \"57231f1a30e4351f4e9f4bd9\",\n  first_name: \"Peregrin\",\n  last_name: \"Took\",\n  location: \"Gondor\",\n  description:\n    \"Home is behind, the world ahead... \" +\n    \"And there are many paths to tread. Through shadow, to the edge of night, \" +\n    \"until the stars are all alight... Mist and shadow, cloud and shade, \" +\n    \"all shall fade... all... shall... fade... \",\n  occupation: \"Thain\",\n};\nconst rk = {\n  _id: \"57231f1a30e4351f4e9f4bda\",\n  first_name: \"Rey\",\n  last_name: \"Kenobi\",\n  location: \"D'Qar\",\n  description: \"Excited to be here!\",\n  occupation: \"Rebel\",\n};\nconst al = {\n  _id: \"57231f1a30e4351f4e9f4bdb\",\n  first_name: \"April\",\n  last_name: \"Ludgate\",\n  location: \"Pawnee, IN\",\n  description: \"Witch\",\n  occupation: \"Animal Control\",\n};\nconst jo = {\n  _id: \"57231f1a30e4351f4e9f4bdc\",\n  first_name: \"John\",\n  last_name: \"Ousterhout\",\n  location: \"Stanford, CA\",\n  description: \"<i>CS142!</i>\",\n  occupation: \"Professor\",\n};\n\nconst users = [im, er, pt, rk, al, jo];\n\n// Create initial photos.\nconst photo1 = {\n  _id: \"57231f1a30e4351f4e9f4bdd\",\n  date_time: \"2012-08-30 10:44:23\",\n  file_name: \"ouster.jpg\",\n  user_id: jo._id,\n};\nconst photo2 = {\n  _id: \"57231f1a30e4351f4e9f4bde\",\n  date_time: \"2009-09-13 20:00:00\",\n  file_name: \"malcolm2.jpg\",\n  user_id: im._id,\n};\nconst photo3 = {\n  _id: \"57231f1a30e4351f4e9f4bdf\",\n  date_time: \"2009-09-13 20:05:03\",\n  file_name: \"malcolm1.jpg\",\n  user_id: im._id,\n};\nconst photo4 = {\n  _id: \"57231f1a30e4351f4e9f4be0\",\n  date_time: \"2013-11-18 18:02:00\",\n  file_name: \"ripley1.jpg\",\n  user_id: er._id,\n};\nconst photo5 = {\n  _id: \"57231f1a30e4351f4e9f4be1\",\n  date_time: \"2013-09-20 17:30:00\",\n  file_name: \"ripley2.jpg\",\n  user_id: er._id,\n};\nconst photo6 = {\n  _id: \"57231f1a30e4351f4e9f4be2\",\n  date_time: \"2009-07-10 16:02:49\",\n  file_name: \"kenobi1.jpg\",\n  user_id: rk._id,\n};\nconst photo7 = {\n  _id: \"57231f1a30e4351f4e9f4be3\",\n  date_time: \"2010-03-18 23:48:00\",\n  file_name: \"kenobi2.jpg\",\n  user_id: rk._id,\n};\nconst photo8 = {\n  _id: \"57231f1a30e4351f4e9f4be4\",\n  date_time: \"2010-08-30 14:26:00\",\n  file_name: \"kenobi3.jpg\",\n  user_id: rk._id,\n};\nconst photo9 = {\n  _id: \"57231f1a30e4351f4e9f4be5\",\n  date_time: \"2013-12-03 09:02:00\",\n  file_name: \"took1.jpg\",\n  user_id: pt._id,\n};\nconst photo10 = {\n  _id: \"57231f1a30e4351f4e9f4be6\",\n  date_time: \"2013-12-03 09:03:00\",\n  file_name: \"took2.jpg\",\n  user_id: pt._id,\n};\nconst photo11 = {\n  _id: \"57231f1a30e4351f4e9f4be7\",\n  date_time: \"2013-09-04 09:16:32\",\n  file_name: \"ludgate1.jpg\",\n  user_id: al._id,\n};\nconst photo12 = {\n  _id: \"57231f1a30e4351f4e9f4be8\",\n  date_time: \"2008-10-16 17:12:28\",\n  file_name: \"kenobi4.jpg\",\n  user_id: rk._id,\n};\n\nconst photos = [\n  photo1,\n  photo2,\n  photo3,\n  photo4,\n  photo5,\n  photo6,\n  photo7,\n  photo8,\n  photo9,\n  photo10,\n  photo11,\n  photo12,\n];\n\n// Create initial comments.\nconst comment1 = {\n  _id: \"57231f1a30e4351f4e9f4be9\",\n  date_time: \"2012-09-02 14:01:00\",\n  comment:\n    \"Learning new programming languages is hard... \" +\n    \"it's so easy to forget a </div>!\",\n  user: jo,\n  photo_id: photo1._id,\n};\n\nconst comment2 = {\n  _id: \"57231f1a30e4351f4e9f4bea\",\n  date_time: \"2013-09-06 14:02:00\",\n  comment:\n    \"This is another comment, with a bit more text; \" +\n    \"if the text gets long enough, does it wrap properly \" +\n    \"from line to line?\",\n  user: jo,\n  photo_id: photo1._id,\n};\n\nconst comment3 = {\n  _id: \"57231f1a30e4351f4e9f4beb\",\n  date_time: \"2013-09-08 14:06:00\",\n  comment:\n    \"If you see this text in <b>boldface</b> \" +\n    \"then HTML escaping isn't working properly.\",\n  user: jo,\n  photo_id: photo1._id,\n};\n\nconst comment4 = {\n  _id: \"57231f1a30e4351f4e9f4bec\",\n  date_time: \"2009-09-14 18:07:00\",\n  comment:\n    \"If there is one thing the history of evolution has\" +\n    \" taught us it's that life will not be contained. Life breaks \" +\n    \"free, it expands to new territories and crashes through \" +\n    \"barriers, painfully, maybe even dangerously, but, uh... well, \" +\n    \"there it is. Life finds a way.\",\n  user: im,\n  photo_id: photo2._id,\n};\n\nconst comment5 = {\n  _id: \"57231f1a30e4351f4e9f4bed\",\n  date_time: \"2013-11-28 17:45:13\",\n  comment:\n    \"Back from my trip. Did IQs just... drop sharply while I was \" + \"away?\",\n  user: er,\n  photo_id: photo5._id,\n};\n\nconst comment6 = {\n  _id: \"57231f1a30e4351f4e9f4bee\",\n  date_time: \"2013-11-02 14:07:00\",\n  comment:\n    \"Hey Rey, great form. Love what \" +\n    \"you do with the scavenged tech, got any tips?\",\n  user: er,\n  photo_id: photo7._id,\n};\n\nconst comment7 = {\n  _id: \"57231f1a30e4351f4e9f4bef\",\n  date_time: \"2013-11-02 14:09:15\",\n  comment:\n    \"Definitely! I love your work! I'm away on a trip at \" +\n    \"the moment, but let's meet up when I get back! :)\",\n  user: rk,\n  photo_id: photo7._id,\n};\n\nconst comment8 = {\n  _id: \"57231f1a30e4351f4e9f4bf0\",\n  date_time: \"2010-09-06 13:59:33\",\n  comment:\n    \"Made a new friend today! Well, they followed me \" + \"home, anyway.\",\n  user: rk,\n  photo_id: photo8._id,\n};\n\nconst comment9 = {\n  _id: \"57231f1a30e4351f4e9f4bf1\",\n  date_time: \"2008-10-16 18:04:55\",\n  comment:\n    \"Wouldn't get anywhere without this beauty! \" +\n    \"Completely built from scraps by hand, but she goes at top \" +\n    \"speeds that'll rival any First Order piece of junk.\",\n  user: rk,\n  photo_id: photo12._id,\n};\n\nconst comment10 = {\n  _id: \"57231f1a30e4351f4e9f4bf2\",\n  date_time: \"2013-12-04 13:12:00\",\n  comment: \"What do you mean you haven't heard of second \" + \"breakfast?\",\n  user: pt,\n  photo_id: photo10._id,\n};\n\nconst comment11 = {\n  _id: \"57231f1a30e4351f4e9f4bf3\",\n  date_time: \"2013-09-04 10:14:32\",\n  comment:\n    \"Beautiful yet cold and aloof. Loner. Does not obey, \" +\n    \"occasionally chooses to cooperate. \",\n  user: al,\n  photo_id: photo11._id,\n};\n\nconst comment12 = {\n  _id: \"57231f1a30e4351f4e9f4bf4\",\n  date_time: \"2016-01-04 2:00:01\",\n  comment: \"Which one are you?\",\n  user: al,\n  photo_id: photo9._id,\n};\n\nconst comment13 = {\n  _id: \"57231f1a30e4351f4e9f4bf5\",\n  date_time: \"2016-01-04 2:04:01\",\n  comment: \"The tall one.\",\n  user: pt,\n  photo_id: photo9._id,\n};\n\nconst comments = [\n  comment1,\n  comment2,\n  comment3,\n  comment4,\n  comment5,\n  comment6,\n  comment7,\n  comment8,\n  comment9,\n  comment10,\n  comment11,\n  comment12,\n  comment13,\n];\n\ncomments.forEach(function (comment) {\n  const photo = photos.filter(function (photo) {\n    return photo._id === comment.photo_id;\n  })[0]; // Only one match. Return the content of the match inside the array\n\n  if (!photo.comments) {\n    photo.comments = [];\n  }\n  photo.comments.push(comment);\n});\n\nconst userListModel = function () {\n  return users;\n};\n\nconst userModel = function (userId) {\n  for (let i = 0; i < users.length; i++) {\n    if (users[i]._id === userId) {\n      return users[i];\n    }\n  }\n  return null;\n};\n\nconst photoOfUserModel = function (userId) {\n  return photos.filter(function (photo) {\n    return photo.user_id === userId;\n  });\n};\n\nconst schemaModel = function () {\n  return schemaInfo;\n};\n\nconst models = {\n  userListModel: userListModel,\n  userModel: userModel,\n  photoOfUserModel: photoOfUserModel,\n  schemaInfo: schemaModel,\n};\n\nexport default models;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}